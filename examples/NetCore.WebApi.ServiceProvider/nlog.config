<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      keepVariablesOnReload="true"
      internalLogFile="c:\temp\nlog\Scheduler.Quartz_Example_NetCore.WebApi.ServiceProvider\internal-nlog.txt">

  <!-- enable some layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <variable name="logFolder" value="c:\temp\nlog\Scheduler.Quartz_Example_NetCore.WebApi.ServiceProvider" />
  <variable name="appVersion" value="${assembly-version:name=Scheduler.Quartz_Example_NetCore.WebApi.ServiceProvider}" />

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file  -->
    <target xsi:type="File" name="allFile" fileName="${var:logFolder}\${shortdate}-nlog-all.log"
            layout="${var:appVersion}|${app-type}|${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile" fileName="${var:logFolder}\${shortdate}-nlog-own.log"
            layout="${var:appVersion}|${app-type}|${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception}" />

    <target xsi:type="File" name="quartzFile" fileName="${var:logFolder}\${shortdate}-nlog-quartz.log"
            layout="${var:appVersion}|${app-type}|${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception}" />

    <target name="dbLogAsync" xsi:type="AsyncWrapper" batchSize="20">
      <!--MS SQL Server example-->
      <target name="dbLog" xsi:type="Database"
              commandType="StoredProcedure"
              commandText="[dbo].[writeLog]">
        <!-- Set connection string from the NLog variable, which was set in Startup.cs  -->
        <connectionString>${var:connectionString}</connectionString>
        <parameter name="@level" layout="${level}" />
        <parameter name="@logger" layout="${logger}" />
        <parameter name="@message" layout="${message}" />
        <parameter name="@exception" layout="${exception:format=toString:separator=&#13;&#10;}" />
        <parameter name="@stackTrace" layout="${stacktrace:format=Raw:topFrames=10:skipFrames=0:separator=&#13;&#10;}" />
        <parameter name="@user" layout="${windows-identity}" />
        <parameter name="@server" layout="${machinename}" />
        <parameter name="@applicationName" layout="${configsetting:name=AppName:default=Unknown\: set AppName in appsettings.json}" />
        <parameter name="@applicationVersion" layout="${var:appVersion}" />
        <parameter name="@callSource" layout="${callsite}" />
        <parameter name="@callSourceLineNumber" layout="${callsite-linenumber}" />
        <parameter name="@applicationType" layout="${app-type}" />
      </target>
    </target>

    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allFile" />
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <!--Quartz logs writes to another file-->
    <logger name="Quartz.*" minLevel="Trace" writeTo="quartzFile" final="true" />
    <logger name="Scheduler.Quartz.*" minLevel="Trace" writeTo="quartzFile" final="true" />

    <logger name="*" minlevel="Trace" writeTo="ownFile" />
    <logger name="*" minlevel="Trace" writeTo="dbLogAsync" />

  </rules>
</nlog>